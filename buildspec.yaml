version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 18

  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - echo REPOSITORY_URI $REPOSITORY_URI
      - echo IMAGE_TAG $IMAGE_TAG
      - echo CODEBUILD_RESOLVED_SOURCE_VERSION $CODEBUILD_RESOLVED_SOURCE_VERSION
      - echo COMMIT_HASH $COMMIT_HASH

  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t next4 .
      - docker tag next4:latest 442359104502.dkr.ecr.us-east-1.amazonaws.com/next4:latest

  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push 442359104502.dkr.ecr.us-east-1.amazonaws.com/next4:latest
      - echo Writing image definitions file...
      - echo "{\"ImageURI\":\"442359104502.dkr.ecr.us-east-1.amazonaws.com/next4:latest\"}" > imageDefinition.json

artifacts:
  files:
    - imageDefinition.json
    - appspec.yaml
    - taskdef.json

cache:
  paths:
    - "node_modules/**/*"
